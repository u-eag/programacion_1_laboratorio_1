***** Clase 1 - prog1 *****

Tipos de datos y máscaras:
int: %i / %d
float: %f / con 2 decimales: %.2f
char: %c

int x=10;
printf("%d",x);

int numero; //al número lo ingresa el usuario
scanf("%d",&numero);


***** Clase 2 - lab1 *****

-ejercicio: mostrar números del 1 al 10 con while

    int i;

    i=0;

    while(i<10){
        printf("%d\n",(i+1));
        i++;
    }

    return 0;

-ejercicio: mostrar números del 1 al 10 con do while

    int i;

    i=0;

    do{
        i++;
        printf("%d\n",i);
    }while(i<10);

    return 0;

-ejercicio: mostrar números del 1 al 10 con for

    int i;
    for (i=0; i<10; i++){
        printf("%d\n",(i+1));
    }

    return 0;
    
-ejercicio: hacer un switch que de 0 a 6 diga "a dormir", de 7 a 9 "buenos días" y de 10 a 23 otra cosa
hacerlo con int y con char del 0 al 9

    int hora;
    char horaChar;

    printf("Ingrese una hora de 0 a 24: ");
    scanf("%d",&hora);

    switch(hora){
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
            printf("A dormir\n");
            break;
        case 7:
        case 8:
        case 9:
            printf("Buenos dias\n");
            break;
        default:
            printf("De 10 a 23\n");

    }

    printf("Ingrese una hora de 0 a 9: ");
    // antes de que el usuario ingrese el char, hay que iniciar el buffer
    fflush(stdin); //esta funciòn limpia el buffer en microsoft, en linux es: setbuf(NULL,stdin)
    scanf("%c",&horaChar);

    switch(horaChar){
        case '0':
        case '1':
        case '2':
        case '3':
        case '4':
        case '5':
        case '6':
            printf("A dormir\n");
            break;
        case '7':
        case '8':
            printf("Buenos dias\n");
            break;
        default:
            printf("el 9 es default\n");
    }

    return 0;

-ejemplo de maximo y minimo:

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
//ctype toupper/tolower
int main()
{
    int valor, min, max, flag=0;
    char rta;

    do{
        printf("Ingrese un valor: ");
        scanf("%d",&valor);

        if(flag==0||valor>max){
            max=valor;
        }
        if(flag==0||valor<min){
            min=valor;
            flag=1;
        }
        do{
            printf("Continuar[S/N]: ");
            fflush(stdin);
            scanf("%c",&rta);
            rta=toupper(rta);
        }while(!(rta=='S'||rta=='N'));
    }while(rta=='S');

    printf("El maximo es: %d \nEl minimo es %d",max,min);

    return 0;
}

***** Clase 3 - prog1 *****

Para crear funciones existen 4 prototipos:

1: Retorno nombreFuncion (Recibe)
2: No Retorno nombreFuncion (Recibe)
3: Retorno nombreFuncion (No Recibe)
4: No Retorno nombreFuncion (No Recibe)

Las variables en el prototipo de la función se llaman "formales" y en el main se llaman "actuales".

- Ejercicio: crear una función que obtenga el máximo entre 3 números

#include <stdio.h>
#include <stdlib.h>

int obtenerMaximo (int x, int y, int z);

int main()
{
    printf("%d\n\n",obtenerMaximo(1,2,3));
    return 0;
}

int obtenerMaximo (int x, int y, int z)
{
    int maximo;

    if (x>y){
        if (x>z){
            maximo = x;
        }
    } else if (y>z){
        maximo = y;
    } else {
        maximo = z;
    }
    
    return maximo;
}

Para generar una librería de funciones: crear un archivo .c (donde va a estar el desarrollo de las funciones) y otro.h (donde van a estar los prototipos de las funciones).

Para cargar una librería en un proyecto de codeblocks: agregar los archivos .c y .h en la carpeta del proyecto, después desde el árbol de codebloks hacer click derecho en el nombre del proyecto / add files / agregar el .c y el .h

***** Clase 4 - lab1 *****

- Diferencia entre trabajar con valores y trabajar con referencia (punteros):

#include <stdio.h>
#include <stdlib.h>

void muestra (int *x, int y);

int main()
{
    int x;
    int y;

    printf("Ingrese x: ");
    scanf("%d",&x);

    printf("Ingrese y: ");
    scanf("%d",&y);

    muestra(&x,y);
    printf("x: %d y: %d\n", x, y);

    return 0;
}

void muestra (int *x, int y){
*x=y;
printf("x: %d y: %d\n", *x, y);
}

- Reportar github: https://github.com/u-eag/tp_laboratorio_1.git

- Función recursiva: cuando desde la función se llama a la función. No es una buena práctica usarlas.

Un ejemplo de función recursiva es el factorial:
#include <stdio.h>
int factorial(int );
void main(void)
{
int valor,result;
printf("\nIngrese numero:");
scanf("%d",&valor);
result=factorial(valor);
printf("\nEl factorial de %d es %d",valor,result);
}
int factorial(int n)
{
int resp;
if(n==1)
return 1;
resp=n* factorial(n-1);
return (resp);
}





